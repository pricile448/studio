
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Fonctions d'aide ---
    // Vérifie si l'utilisateur authentifié est un administrateur.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Vérifie si l'ID de l'utilisateur authentifié est présent dans l'ID d'une conversation.
    // L'ID du chat est au format "participant1_participant2".
    function isParticipant(chatId) {
      return request.auth.uid in chatId.split('_');
    }

    // --- Collection des administrateurs ---
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if false; // L'écriture est désactivée côté client pour des raisons de sécurité.
    }

    // --- Collection des utilisateurs ---
    match /users/{userId} {
      // Fonction d'aide pour vérifier si l'utilisateur est le propriétaire du document.
      function isOwner() {
        return request.auth != null && request.auth.uid == userId;
      }

      // LECTURE : Autorisée pour le propriétaire du document ou un administrateur.
      allow read: if isOwner() || isAdmin();

      // CRÉATION : Autorisée uniquement pour le propriétaire du document.
      allow create: if isOwner();

      // MISE À JOUR : Autorisée pour un administrateur (sans restriction) OU pour le propriétaire avec des règles strictes.
      allow update: if isAdmin() || (isOwner()
        // --- Champs Immuables (ne peuvent pas être modifiés par l'utilisateur) ---
        && request.resource.data.uid == resource.data.uid
        && request.resource.data.email == resource.data.email
        && request.resource.data.createdAt == resource.data.createdAt

        // --- Champs réservés à l'administration (ne peuvent pas être modifiés par l'utilisateur) ---
        && (request.resource.data.kycStatus == 'verified' ? resource.data.kycStatus == 'verified' : true)
        && (request.resource.data.cardStatus == 'active' ? resource.data.cardStatus == 'active' : true)
        && request.resource.data.get('iban', null) == resource.data.get('iban', null)
        && request.resource.data.get('bic', null) == resource.data.get('bic', null)

        // --- Intégrité des soldes de comptes (l'utilisateur ne peut pas modifier les soldes) ---
        && request.resource.data.accounts.size() == resource.data.accounts.size()
        && (
          size(request.resource.data.accounts) == 0 ||
          (
            size(request.resource.data.accounts) > 0 &&
            request.resource.data.accounts[0].balance == resource.data.accounts[0].balance &&
            (size(request.resource.data.accounts) == 1 || request.resource.data.accounts[1].balance == resource.data.accounts[1].balance) &&
            (size(request.resource.data.accounts) == 2 || request.resource.data.accounts[2].balance == resource.data.accounts[2].balance)
          )
        )

        // --- Intégrité des transactions (l'utilisateur peut seulement en ajouter) ---
        && (
          request.resource.data.transactions.size() >= resource.data.transactions.size()
        )
      );
      
      // SUPPRESSION : Autorisée uniquement pour les administrateurs.
      allow delete: if isAdmin();
    }
    
    // --- Collection des conversations de messagerie ---
    match /chats/{chatId} {
      // LECTURE (get) : Autorisée si l'ID de l'utilisateur est dans l'ID du document de chat.
      // Cela permet de vérifier si une conversation existe déjà, même si le document n'a pas encore été créé.
      allow get: if isParticipant(chatId);
      
      // LISTE (list) : Interdite pour des raisons de sécurité et de performance.
      allow list: if false;
      
      // CRÉATION (create) : Autorisée si l'utilisateur est un des participants de la conversation qu'il crée.
      allow create: if isParticipant(chatId) && request.auth.uid in request.resource.data.participants;
      
      // MISE À JOUR (update) : Autorisée si l'utilisateur est un participant, pour mettre à jour le dernier message.
      allow update: if isParticipant(chatId);
      
      // SUPPRESSION (delete) : Autorisée uniquement pour les administrateurs.
      allow delete: if isAdmin();

      // --- Sous-collection des messages ---
      match /messages/{messageId} {
        // LECTURE (read) : Autorisée si l'utilisateur participe à la conversation parente.
        allow read: if isParticipant(chatId);

        // ÉCRITURE (create) : Autorisée si l'ID de l'utilisateur correspond au senderId du message
        // et qu'il participe bien à la conversation.
        allow create: if request.resource.data.senderId == request.auth.uid && isParticipant(chatId);
        
        // La mise à jour et la suppression des messages sont interdites pour garantir l'intégrité de la conversation.
        allow update, delete: if false;
      }
    }
  }
}
