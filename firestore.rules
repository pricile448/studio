
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Fonctions d'aide ---
    
    // Vérifie si l'utilisateur authentifié est un administrateur.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Vérifie si l'utilisateur authentifié est bien le propriétaire du document demandé.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Vérifie si l'utilisateur est un participant de la conversation.
    // Règle CLÉ : vérifie d'abord si la conversation existe avant d'accéder à ses données.
    function isChatParticipant(chatId) {
      let chatDoc = get(/databases/$(database)/documents/chats/$(chatId));
      return exists(/databases/$(database)/documents/chats/$(chatId)) &&
             request.auth.uid in chatDoc.data.participants;
    }


    // --- Règles de collections ---

    // Profils utilisateurs
    match /users/{userId} {
      // Un administrateur peut lire/écrire n'importe quel profil.
      // Un utilisateur peut lire/écrire son propre profil.
      allow read, write: if isAdmin() || isOwner(userId);
    }

    // Conversations de messagerie
    match /chats/{chatId} {
      // L'administrateur peut tout faire.
      allow read, write, delete: if isAdmin();
      // Un utilisateur peut lire/écrire s'il participe à la conversation.
      allow read, write: if isChatParticipant(chatId);
    }

    // Messages dans une conversation
    match /chats/{chatId}/messages/{messageId} {
       // L'administrateur peut tout faire.
      allow read, write, delete: if isAdmin();
      
      // Un utilisateur peut lire ou créer des messages s'il participe à la conversation.
      allow read, create: if isChatParticipant(chatId);
                             
      // Un utilisateur ne peut modifier/supprimer que ses propres messages.
      allow update, delete: if isChatParticipant(chatId) && request.auth.uid == resource.data.senderId;
    }
    
    // Collection des administrateurs
    match /admins/{adminId} {
      // Seuls les administrateurs peuvent lire la liste (pour la sécurité).
      allow read: if isAdmin();
      // Personne ne peut écrire depuis le client pour éviter toute manipulation.
      allow write: if false;
    }
  }
}
