
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId);
      // Deny create and delete operations from the client side for security.
      allow create, delete: if false;
    }
    
    match /admins/{userId} {
      // Allow any authenticated user to check who is an admin.
      // This collection should only contain UIDs and basic, non-sensitive data.
      allow read: if request.auth != null;
    }

    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        // Allow user to "soft delete" by marking a message as deleted for them.
        allow update: if request.auth.uid == resource.data.senderId && request.resource.data.keys().hasAll(['deletedForUser']);
      }
    }
    
    match /kycSubmissions/{userId} {
      // A user can create their own submission document, identified by their UID.
      // This is now mainly a fallback, as the server with admin rights handles the creation.
      allow create: if isOwner(userId);

      // A user can read their own submission status. Admins can read any submission.
      allow read: if isOwner(userId) || isAdmin();

      // Admins need to list all submissions to display them in the admin panel.
      allow list: if isAdmin();

      // Only an admin can delete a submission (after approving/rejecting it).
      allow delete: if isAdmin();

      // No one should be able to update a submission document directly.
      allow update: if false;
    }
    
     match /config/{docId} {
      allow read: if request.auth != null; // Any authenticated user can read config (like billing info)
      allow write: if isAdmin(); // Only admins can change config
    }
  }
}
