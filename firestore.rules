rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      // Les utilisateurs peuvent lire leur propre profil s'ils sont authentifiés.
      allow read: if request.auth != null && request.auth.uid == userId;

      // Un nouvel utilisateur peut créer son propre profil.
      // Des règles de validation sont appliquées pour s'assurer que les données initiales sont correctes.
      allow create: if request.auth != null && request.auth.uid == userId
                    && request.resource.data.uid == userId
                    && request.resource.data.email == request.auth.token.email
                    && request.resource.data.kycStatus == 'unverified'
                    && request.resource.data.createdAt == request.time;
      
      // Un utilisateur peut mettre à jour son propre profil, avec des restrictions.
      allow update: if request.auth != null && request.auth.uid == userId
                     && canUpdateProfile(request.resource.data, resource.data);
    }
  }
  
  // Fonction d'aide pour valider les mises à jour du profil utilisateur.
  function canUpdateProfile(incomingData, existingData) {
    
    // Champs immuables : l'utilisateur ne peut pas changer son UID, son email, sa date de création, son IBAN ou son BIC.
    let isImmutableDataUnchanged = incomingData.uid == existingData.uid
                                   && incomingData.email == existingData.email
                                   && incomingData.createdAt.toMillis() == existingData.createdAt.toMillis()
                                   && incomingData.iban == existingData.iban
                                   && incomingData.bic == existingData.bic;

    // Transition de statut KYC autorisée : un utilisateur ne peut passer son statut que de 'unverified' à 'pending'.
    // Il ne peut pas se donner le statut 'verified'.
    let isKycUpdateAllowed = (existingData.kycStatus == 'unverified' && incomingData.kycStatus == 'pending')
                              || (existingData.kycStatus == incomingData.kycStatus);
                              
    return isImmutableDataUnchanged && isKycUpdateAllowed;
  }
}
