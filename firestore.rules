rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Les administrateurs ont un accès complet
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Règles pour les clients
    match /users/{userId} {
      allow read, create: if isOwner(userId);
      
      // Autorise un utilisateur à mettre à jour son propre document, MAIS il ne peut pas changer les champs protégés.
      // Cela permet la mise à jour des champs 'accounts' et 'transactions' pour le virement.
      allow update: if isOwner(userId) &&
        request.resource.data.kycStatus == resource.data.kycStatus &&
        request.resource.data.cardStatus == resource.data.cardStatus;
    }

    match /chats/{chatId} {
        function isChatParticipant() {
            return request.auth != null && request.auth.uid in chatId.split('_');
        }
        allow read, create, update: if isChatParticipant();
      
        match /messages/{messageId} {
            allow read, create: if isChatParticipant();
            // Permet à un utilisateur de "supprimer logiquement" son propre message
            allow update: if isOwner(resource.data.senderId) && 'deletedForUser' in request.resource.data;
            allow delete: if false; // Les clients ne peuvent pas supprimer définitivement les messages.
        }
    }
  }
}
