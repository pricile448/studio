rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Les utilisateurs peuvent lire leur propre profil s'ils sont authentifiés.
      allow read: if request.auth != null && request.auth.uid == userId;

      // Un nouvel utilisateur peut créer son propre profil.
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Un utilisateur peut mettre à jour son propre profil, avec des restrictions.
      allow update: if request.auth != null && request.auth.uid == userId
                     && canUpdateProfile(request.resource.data, resource.data);
    }
  }
  
  // Fonction d'aide pour valider les mises à jour du profil utilisateur.
  function canUpdateProfile(incomingData, existingData) {
    // Liste des champs que l'utilisateur est autorisé à modifier directement.
    let allowedUserEdits = ['firstName', 'lastName', 'dob', 'address', 'notificationPrefs', 'profession', 'salary', 'photoURL'];

    // Champs qui ne doivent jamais être modifiés par l'utilisateur.
    let areImmutableFieldsUnchanged = 
        incomingData.uid == existingData.uid &&
        incomingData.email == existingData.email &&
        incomingData.createdAt == existingData.createdAt &&
        // IBAN et BIC ne peuvent pas être modifiés par l'utilisateur.
        incomingData.iban == existingData.iban &&
        incomingData.bic == existingData.bic;
        
    // Vérification de la transition du statut KYC.
    let isKycTransitionValid =
        // L'utilisateur peut soumettre une vérification.
        (existingData.kycStatus == 'unverified' && incomingData.kycStatus == 'pending') ||
        // Le statut ne change pas (par exemple, lors de la mise à jour du profil).
        (existingData.kycStatus == incomingData.kycStatus);
        
    // Obtenir la liste de tous les champs qui ont été modifiés dans la requête.
    let changedKeys = incomingData.keys().diff(existingData.keys());

    // Vérifier si seuls les champs autorisés ont été modifiés.
    // L'utilisateur peut modifier les champs de `allowedUserEdits` ET/OU son `kycStatus` (selon la règle de transition).
    let areUpdatesAllowed = changedKeys.hasOnly(allowedUserEdits.concat(['kycStatus']));

    return areImmutableFieldsUnchanged && isKycTransitionValid && areUpdatesAllowed;
  }
}
