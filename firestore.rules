rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================
    // Fonctions d'aide
    // =================================

    // L'utilisateur est-il connecté ?
    function isSignedIn() {
      return request.auth != null;
    }

    // L'utilisateur est-il le propriétaire du document ?
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // L'utilisateur est-il un administrateur ?
    function isAdmin() {
      return isSignedIn() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Vérifie si un utilisateur met à jour uniquement les champs autorisés.
    // Empêche la modification de champs critiques comme le solde des comptes.
    function isUpdatingOwnAllowedFields(request, resource) {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(
        [
          'firstName', 'lastName', 'phone', 'dob', 'pob', 'nationality', 'residenceCountry', 'address', 'city', 'postalCode',
          'profession', 'salary', 'photoURL', 'notificationPrefs', 'inactivityTimeout', 'documents', 'budgets', 'virtualCards',
          'beneficiaries', 'kycStatus', 'kycSubmittedAt', 'cardStatus', 'cardType', 'cardRequestedAt', 'physicalCard',
          'hasPendingVirtualCardRequest', 'virtualCardRequestedAt', 'transactions'
        ]
      );
    }

    // =================================
    // Règles des Collections
    // =================================
    match /admins/{adminId} {
      allow read: if isAdmin() && request.auth.uid == adminId;
      allow write: if false; // Doit être géré depuis un backend de confiance
    }
    
    match /chats/{chatId} {
      allow read, update, create: if isSignedIn() && request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
        allow read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow create: if isSignedIn() && request.resource.data.senderId == request.auth.uid;
        allow update: if isSignedIn() && request.resource.data.deletedForUser == true && resource.data.senderId == request.auth.uid;
      }
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow delete: if false;
      
      // Un admin peut tout mettre à jour.
      // Un utilisateur peut mettre à jour son propre document, mais seulement certains champs.
      allow update: if isAdmin() || (isOwner(userId) && isUpdatingOwnAllowedFields(request, resource));
    }
  }
}
