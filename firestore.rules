rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Fonctions d'aide ---
    // Vérifie si l'utilisateur authentifié est un administrateur.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- Collection des administrateurs ---
    // Utilisée pour la vérification des permissions.
    // Seuls les utilisateurs authentifiés peuvent lire (pour vérifier leur propre statut).
    // L'écriture est désactivée côté client pour des raisons de sécurité.
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // --- Collection des utilisateurs ---
    match /users/{userId} {
      // Fonction d'aide pour vérifier si l'utilisateur est le propriétaire du document
      function isOwner() {
        return request.auth != null && request.auth.uid == userId;
      }

      // LECTURE : Autorisée pour le propriétaire du document ou un administrateur.
      allow read: if isOwner() || isAdmin();

      // CRÉATION : Autorisée uniquement pour le propriétaire du document.
      allow create: if isOwner();

      // MISE À JOUR : Autorisée pour un administrateur (sans restriction) OU pour le propriétaire avec des règles strictes.
      allow update: if isAdmin() || (isOwner()
        // --- Champs Immuables (ne peuvent pas être modifiés par l'utilisateur) ---
        && request.resource.data.uid == resource.data.uid
        && request.resource.data.email == resource.data.email
        && request.resource.data.createdAt == resource.data.createdAt

        // --- Champs réservés à l'administration (ne peuvent pas être modifiés par l'utilisateur) ---
        && (request.resource.data.kycStatus == 'verified' ? resource.data.kycStatus == 'verified' : true)
        && (request.resource.data.cardStatus == 'active' ? resource.data.cardStatus == 'active' : true)
        && request.resource.data.get('iban', null) == resource.data.get('iban', null)
        && request.resource.data.get('bic', null) == resource.data.get('bic', null)

        // --- Intégrité des soldes de comptes (l'utilisateur ne peut pas modifier les soldes) ---
        && request.resource.data.accounts.size() == resource.data.accounts.size()
        && (
          size(request.resource.data.accounts) == 0 ||
          (
            size(request.resource.data.accounts) > 0 &&
            request.resource.data.accounts[0].balance == resource.data.accounts[0].balance &&
            (size(request.resource.data.accounts) == 1 || request.resource.data.accounts[1].balance == resource.data.accounts[1].balance) &&
            (size(request.resource.data.accounts) == 2 || request.resource.data.accounts[2].balance == resource.data.accounts[2].balance)
          )
        )

        // --- Intégrité des transactions (l'utilisateur peut seulement en ajouter) ---
        && (
          request.resource.data.transactions.size() >= resource.data.transactions.size()
        )
      );
      
      // SUPPRESSION : Autorisée uniquement pour les administrateurs.
      allow delete: if isAdmin();
    }
    
    // --- Règles pour la messagerie ---
    match /chats/{chatId} {
      // Vérifie si l'ID de l'utilisateur fait partie de l'ID du document de chat.
      // Cela permet de vérifier la permission de lecture (get) même si le document n'existe pas encore.
      function isUserInChatId() {
        return request.auth.uid in split(chatId, '_');
      }

      // Vérifie si l'utilisateur est un des participants listés dans le document.
      function isParticipant() {
        return request.auth.uid in resource.data.participants;
      }
      
      // LECTURE (GET) : Autorisée si l'utilisateur fait partie de l'ID du chat.
      allow get: if isUserInChatId() || isAdmin();
      
      // LECTURE (LIST) : Autorisée uniquement aux administrateurs pour voir la liste des conversations.
      allow list: if isAdmin();

      // CRÉATION : Autorisée si l'utilisateur est un participant et que les données sont valides.
      allow create: if isUserInChatId() && isParticipant();
      
      // MISE À JOUR : Autorisée uniquement pour les participants (ex: mettre à jour lastMessage) ou les administrateurs.
      allow update: if isParticipant() || isAdmin();
      
      // SUPPRESSION : Autorisée uniquement pour les administrateurs.
      allow delete: if isAdmin();

      // --- SOUS-COLLECTION DES MESSAGES ---
      match /messages/{messageId} {
        // LECTURE, ÉCRITURE, CRÉATION : Autorisées pour les participants de la conversation ou les administrateurs.
        allow read, write: if get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]) || isAdmin();
      }
    }
  }
}