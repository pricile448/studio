
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- USERS ---
    match /users/{userId} {
      // Allow create for anyone (signup).
      allow create: if request.resource.data.uid == request.auth.uid;

      // Allow read for self or for an admin.
      allow read: if request.auth.uid == userId || isAdmin();
      
      // Allow admin to list users.
      allow list: if isAdmin();
      
      // An admin can update any field.
      // A user can update their own profile, but cannot change their kycStatus.
      allow update: if isAdmin() || (request.auth.uid == userId && request.resource.data.kycStatus == resource.data.kycStatus);
      
      // Only admin can delete users.
      allow delete: if isAdmin();
    }

    // --- KYC SUBMISSIONS ---
    match /kycSubmissions/{userId} {
      // User can create their own submission. Admin can create on behalf of user.
      allow create: if request.auth.uid == userId || isAdmin();
      
      // User can read their own submission status. Admin can read any.
      allow get: if request.auth.uid == userId || isAdmin();
      
      // Admin can list all submissions for review.
      allow list: if isAdmin();
      
      // Admin can update the status of a submission. User cannot.
      allow update: if isAdmin();
      
      // Admin can delete a submission after processing.
      allow delete: if isAdmin();
    }
    
    // --- ADMINS ---
    match /admins/{adminId} {
      // Any authenticated user can check who is an admin.
      // This is safe as it only contains UIDs, no sensitive data.
      allow read: if request.auth != null;
      // Only an admin can modify the admin list (for future use).
      allow write: if isAdmin();
    }
    
    // --- CONFIG ---
    match /config/{docId} {
        // Allow any authenticated user to read config (e.g., for billing details).
        allow read: if request.auth != null;
        // Only admins can change the config.
        allow write: if isAdmin();
    }

    // --- CHATS & MESSAGES ---
    match /chats/{chatId} {
      // Admins can list all chats to provide support.
      allow list: if isAdmin();
      
      // A participant or an admin can get a specific chat document.
      allow get: if request.auth != null && (request.auth.uid in resource.data.participants || isAdmin());

      // A participant or an admin can write to a chat document (e.g., update last message).
      allow write: if request.auth != null && (request.auth.uid in resource.data.participants || isAdmin());

      match /messages/{messageId} {
        // A participant or an admin can read/create messages in a chat.
        allow read, create: if request.auth != null && (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isAdmin());
        
        // Admin can update messages (e.g. for moderation).
        // User can update their own message only to mark it as deleted for them.
        allow update: if (isAdmin()) || (request.auth.uid == resource.data.senderId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['deletedForUser']));
        
        // Only an admin can permanently delete messages.
        allow delete: if isAdmin();
      }
    }
  }
}
