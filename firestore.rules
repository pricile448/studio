
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the requesting user's UID exists in the 'admins' collection.
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- Collection Rules ---

    // Admins collection: Contains documents where the doc ID is the UID of an admin.
    match /admins/{adminId} {
      // Any authenticated user can check who is an admin. This is safe as it only contains UIDs.
      allow read: if request.auth != null;
      // Writes to this collection should only be done via the Firebase Console for security.
      allow write: if false;
    }

    // Users collection
    match /users/{userId} {
      allow create: if true; // Anyone can create a user document during sign-up.
      
      // A user can read, update, or delete their own document.
      allow read, update, delete: if isOwner(userId);

      // An admin has full read (get, list) and write (create, update, delete) access.
      allow get, list, write: if isAdmin();
    }
    
    // KYC Submissions collection
    match /kycSubmissions/{userId} {
      // A user can create their own submission and read it (to see pending status).
      allow create, read: if isOwner(userId);
      
      // An admin can read any submission, list all submissions, and delete them after processing.
      allow get, list, delete: if isAdmin();

      // Nobody can update a submission once it's created.
      allow update: if false;
    }

    // Chats & Messages
    match /chats/{chatId} {
      match /messages/{messageId} {
        allow read, create: if request.auth != null && (isOwner(request.auth.uid) || isAdmin());
        // Only the sender can "update" a message (for soft-delete).
        allow update: if request.auth != null && isOwner(request.resource.data.senderId);
        // Only admins can hard-delete messages.
        allow delete: if isAdmin();
      }
      allow read, create, update: if request.auth != null && (isOwner(request.auth.uid) || isAdmin());
    }

    // Config collection (e.g., for billing)
    match /config/{docId} {
        allow read: if request.auth != null; // Any authenticated user can read public configs.
        allow write: if isAdmin(); // Only admins can change configs.
    }
  }
}
