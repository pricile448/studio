rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isAdmin();
    }
    
    match /admins/{adminId} {
      allow read: if request.auth != null;
    }
    
    match /chats/{chatId} {
      allow read, write: if request.auth != null && (request.auth.uid in resource.data.participants || isAdmin());
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && exists(/databases/$(database)/documents/chats/$(chatId)) && (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isAdmin());
    }
    
    match /kycSubmissions/{userId} {
      allow create: if isOwner(userId);
      allow read, delete, list: if isAdmin();
    }

    match /config/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
