
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // An admin is a user whose UID is in the 'admins' collection.
      // exists() is an efficient way to check for a document's presence.
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Admins collection: only authenticated users can check who is an admin.
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(); // Only admins can manage other admins
    }

    // Users collection
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
      
      // Allow admins to list all users for the admin dashboard
      allow list: if isAdmin();
    }
    
    // KYC Submissions
    match /kycSubmissions/{userId} {
      allow create: if isOwner(userId);
      // A user can read their own submission status, admins can read any.
      allow read: if isOwner(userId) || isAdmin();
      // Only admins can delete submissions (after processing).
      allow delete: if isAdmin();
      // Only admins can list all submissions.
      allow list: if isAdmin();
    }
    
    // Chat collection
    match /chats/{chatId} {
        allow read, write: if request.auth.uid in resource.data.participants;
        
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
            allow update: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        }
    }
    
    // Config collection
    match /config/{docId} {
      // Any authenticated user can read public configuration like billing info.
      allow read: if request.auth != null;
      // Only admins can change the configuration.
      allow write: if isAdmin();
    }
  }
}
