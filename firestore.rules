rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/admins/$(userId));
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      
      // Un administrateur peut mettre à jour n'importe quel document utilisateur.
      // Un utilisateur normal peut mettre à jour son propre document, MAIS ne peut pas changer son kycStatus.
      allow update: if (isAdmin(request.auth.uid)) || 
                       (request.auth.uid == userId && request.resource.data.kycStatus == resource.data.kycStatus);
      
      allow create: if request.auth.uid == userId;
      
      // Personne ne doit pouvoir supprimer des documents utilisateur depuis le client.
      allow delete: if false;
    }

    match /admins/{adminId} {
      // Tout utilisateur authentifié peut vérifier qui est admin pour valider l'accès.
      allow read: if request.auth != null;
      // Seuls les admins peuvent modifier la liste des admins.
      allow write: if isAdmin(request.auth.uid);
    }
    
    match /kycSubmissions/{userId} {
      allow create: if request.auth.uid == userId;
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow update: if false; // Les soumissions sont immuables
      allow delete: if isAdmin(request.auth.uid);
      allow list: if isAdmin(request.auth.uid);
    }

    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.participants;
    }
    
    match /chats/{chatId}/messages/{messageId} {
       allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isAdmin(request.auth.uid);
    }

    match /config/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(request.auth.uid);
    }
  }
}
