
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user's UID is in the 'admins' collection
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow anyone to sign up.
      allow create: if request.auth.uid == userId;

      // Users can read/update their own profile.
      // Admins can read/update ANY profile and LIST all profiles.
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
      
      // Nobody can delete users from the client.
      allow delete: if false;
    }
    
    // Rules for the 'admins' collection
    match /admins/{adminId} {
      // Admins can see who other admins are.
      allow read: if isAdmin();
      
      // Admin list is managed only from the server/console.
      allow write: if false;
    }

    // Rules for the 'chats' collection and sub-collections
    match /chats/{chatId}/{document=**} {
        // Admins have full access to all chats and messages.
        // Participants of a chat have full access to that chat and its messages.
        allow read, write: if isAdmin() || request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
  }
}
