
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Rules for user profiles
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }
    
    // Rules for chat conversations
    match /chats/{chatId} {
      allow get, list, update, delete: if isAdmin() || request.auth.uid in resource.data.participants;
      allow create: if isAdmin() || (request.auth.uid in request.resource.data.participants && request.resource.data.participants.size() == 2);
      
      // Rules for messages within a chat
      match /messages/{messageId} {
        allow read, create: if isAdmin() || request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        // Allow user to 'soft delete' their own messages, allow admin to update any message
        allow update: if isAdmin() || (request.auth.uid == resource.data.senderId);
        // Only admin can permanently delete messages
        allow delete: if isAdmin();
      }
    }
    
    // Rules for the admins collection
    match /admins/{adminId} {
        // Only admins can read or write to the admins collection
        allow read, write: if isAdmin();
    }
  }
}
